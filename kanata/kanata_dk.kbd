;; vim: set filetype=lisp :

;; Function keys on masOS can sometimes be an issue, add them in if needed
;;  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10   f11   f12
;;  brdn  brup  _    _    _    _   prev  pp  next  mute  vold  volu

(defcfg
  process-unmapped-keys yes
  ;; macos-dev-names-include (
    ;; "Apple Internal Keyboard / Trackpad"
  ;; )
)

(defvar
  tap-time 200
  hold-time 200
)

(defalias
  ;; layes
  default (layer-switch default)
  programmer (layer-switch programmer)
  ctrlmod (layer-while-held control)

  ;; DK to US
  btick (macro S-Equal S-Equal)
  tilde (macro (unshift ralt BracketRight) (unshift ralt BracketRight))
  tildtick (switch
    ((or lsft rsft)) @tilde break
    () @btick break
  )
  quote (switch
    ((or lsft rsft)) S-Digit2 break
    () Backslash break
  )
  slash (switch
    ((or lsft rsft)) Minus break
    () S-Digit7 break
  )
  hat (switch
    ((or lsft rsft)) BracketRight break
    () Digit6 break
  )
  amp (switch
    ((or lsft rsft)) Digit6 break
    () Digit7 break
  )
  multiply (switch
    ((or lsft rsft)) Backslash break
    () Digit8 break
  )
  parl (switch
    ((or lsft rsft)) Digit8 break
    () Digit9 break
  )
  parr (switch
    ((or lsft rsft)) Digit9 break
    () Digit0 break
  )
  equal (switch
    ((or lsft rsft)) (unshift Minus) break
    () S-Digit0 break
  )
  semicol (switch
    ((or lsft rsft)) S-Period break
    () S-Comma break
  )

  ;; home row mods
  escctrl (tap-hold $tap-time $hold-time esc lctl)
  a (tap-hold $tap-time $hold-time a lmet)
  s (tap-hold $tap-time $hold-time s lalt)
  d (tap-hold $tap-time $hold-time d lsft)
  f (tap-hold $tap-time $hold-time f lctl)
  j (tap-hold $tap-time $hold-time j rctl)
  k (tap-hold $tap-time $hold-time k rsft)
  l (tap-hold $tap-time $hold-time l lalt)
  semicolon (tap-hold $tap-time $hold-time @semicol rmet)
)

(platform (macos)
  (defalias 
  ;; DK to US
    brackl RA-Digit8
    brackr RA-Digit9
    dollar (switch
      ((or lsft rsft)) (unshift IntlBackslash) break
      () Digit4 break
    )
    at (switch
      ((or lsft rsft)) (unshift ralt Backslash) break
      () Digit2 break
    )
    comma (switch
      ((or lsft rsft)) (unshift Backquote) break
      () Comma break
    )
    period (switch
      ((or lsft rsft)) Backquote break
      () Period break
    )
    bslash (switch
      ((or lsft rsft)) (unshift ralt i) break
      () S-RA-Digit7 break
    )
    intlbs @tildtick
    backq @bslash
  )
)

(platform (linux)
  (defalias 
    ;; DK to US
    brackl (switch
      ((or lsft rsft)) (unshift ralt Digit7) break
      () RA-Digit8 break
    )
    brackr (switch
      ((or lsft rsft)) (unshift ralt Digit0) break
      () RA-Digit9 break
    )
    dollar (switch
      ((or lsft rsft)) (unshift ralt Digit4) break
      () Digit4 break
    )
    at (switch
      ((or lsft rsft)) (unshift ralt Digit2) break
      () Digit2 break
    )
    comma (switch
      ((or lsft rsft)) (unshift IntlBackslash) break
      () Comma break
    )
    period (switch
      ((or lsft rsft)) IntlBackslash break
      () Period break
    )
    bslash (switch
      ((or lsft rsft)) (unshift ralt Equal) break
      () RA-IntlBackslash break
    )
    intlbs @bslash
    backq @tildtick
  )
)

(defsrc
  IntlBackslash Digit2 Digit4 Digit6 Digit7 Digit8 Digit9 Digit0 Minus Equal
  BracketLeft BracketRight
  caps a s d f j k l Semicolon Quote Backslash
  lsft Backquote Comma Period Slash rsft
  ControlLeft
)

(deflayer programmer
  @intlbs @at @dollar @hat @amp @multiply @parl @parr Slash @equal
  @brackl @brackr
  @escctrl @a @s @d @f @j @k @l @semicolon @quote @bslash
  lsft @backq @comma @period @slash lsft
  @ctrlmod
)

(deflayermap (default)
  caps @escctrl
  ControlLeft @ctrlmod
)

(deflayermap (control)
  r lrld p @programmer
  d @default
  Semicolon Semicolon Quote Quote BracketLeft BracketLeft Equal BracketLeft ;; Quick Access æÆ øØ åÅ
  lsft lsft rsft rsft
  ___ XX
)

